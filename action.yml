name: Appdome iOS Fuse Build And Sign
description: An Appdome action for build and sign iOS vanilla applications as a part of your ci/cd workflow activity
branding:
  icon: 'bluetooth'
  color: 'blue'

inputs:
  appdome_key:
    description: 'Appdome API key'
    # Default value if no value is explicitly provided
    default: '!'
    # Input has to be provided for the workflow to run
    required: true
  ios_vanilla_file:
    # Friendly description to be shown in the UI instead of 'name'
    description: 'Download link for IPA file'
    # Default value if no value is explicitly provided
    default: '!'
    # Input has to be provided for the workflow to run
    required: true
  fusion_set_id:
    description: "Appdome iOS fusion set id"
    default: '!'
    required: true
  sign_options:
    type: choice
    description: Appdome Sign Options
    options: 
    - Appdome Signing
    - Private Signing
    - Auto-Dev Private Signing
    required: true
  p12_file:
    # Friendly description to be shown in the UI instead of 'name'
    description: 'Download link for P12 file'
    # Default value if no value is explicitly provided
    default: '!'
    # Input has to be provided for the workflow to run
    required: false
  p12_password:
    # Friendly description to be shown in the UI instead of 'name'
    description: 'P12 password'
    # Default value if no value is explicitly provided
    default: '!'
    required: false
  provisioning_Profiles:
    description: 'Download link for Provisioning Profiles file'
    default: '!'
    required: true
  entitlements_file:
    description: 'Download link for entitlements file'
    default: '!'
    required: false
  sign_overrids:
    description: 'Download link for json sign overrides'
    default: '!'
    required: false

runs:
  using: "composite"
  steps:
    - name: Cloning appdome-api-python github repository
      uses: actions/checkout@master
      with:
        repository: Appdome/appdome-api-python
        ref: refs/heads/main
        path: appdome
    - name: My first step
      run: sudo apt update | sudo apt install python3-pip | sudo pip3 install -r appdome/requirements.txt
      shell: bash   
    - name: Cloning actions
      uses: actions/checkout@master
      with:
        repository: nirappdome/appdome_ios_action
        ref: refs/heads/main
        path: actions
    - name: permissions
      run: chmod +x ./actions/actions/download.sh | chmod +x ./actions/actions/entitlements.sh | chmod +x ./actions/actions/provision_profile.sh | chmod +x ./actions/actions/appdome_build_sign.sh
      shell: bash
    - name: Run download.sh
      run: ./actions/actions/download.sh ${{ inputs.p12_file }} ${{ inputs.sign_overrids }} ${{ inputs.ios_vanilla_file }}
      shell: bash
    - name: Run entitlements.sh
      run: ./actions/actions/entitlements.sh ${{ inputs.entitlements_file }}
      shell: bash
    - name: Run provision_profile.sh
      run: ./actions/actions/provision_profile.sh ${{ inputs.Provisioning_Profiles }}
      shell: bash
    - name: Run appdome_build_sign.sh
      run: ./actions/actions/appdome_build_sign.sh ${{inputs.appdome_key}} ${{ inputs.fusion_set_id }} ${{ inputs.sign_options }} ${{ inputs.sign_overrids }} ${{ inputs.entitlements_file }} ${{ inputs.p12_password }}
      shell: bash
    - name: explore
      run: ls -lR
      shell: bash
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: workflow-artifacts
        path: ./output/ # path to output folder
